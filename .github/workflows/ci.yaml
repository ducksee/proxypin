name: CI

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ "main" ]
  
  # 支持手动触发
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android
        run: flutter build apk --release --split-per-abi

      - name: Upload arm64-v8a APK
        uses: actions/upload-artifact@v4
        with:
          name: app-arm64-v8a-release
          path: build/app/outputs/flutter-apk/app-arm64-v8a-release.apk

      - name: Upload armeabi-v7a APK
        uses: actions/upload-artifact@v4
        with:
          name: app-armeabi-v7a-release
          path: build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk

      - name: Upload x86_64 APK
        uses: actions/upload-artifact@v4
        with:
          name: app-x86_64-release
          path: build/app/outputs/flutter-apk/app-x86_64-release.apk

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ProxyPin-Windows
          path: build/windows/x64/runner/Release/

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install Linux build dependencies
        run: |
          sudo apt update && sudo apt upgrade
          sudo apt install -y clang cmake ninja-build pkg-config
          sudo apt install -y libgtk-3-dev
          sudo apt install -y liblzma-dev

      - name: Install dependencies
        run: flutter pub get

      - name: Build Linux
        run: flutter build linux --release

      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ProxyPin-Linux
          path: build/linux/x64/release/bundle/

  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Build macOS
        run: flutter build macos --release

      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ProxyPin-macOS
          path: build/macos/Build/Products/Release/

  build-ios:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Build iOS (no signing)
        run: |
          flutter build ios --release --no-codesign
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r ProxyPin-iOS.ipa Payload/

      - name: Upload iOS IPA
        uses: actions/upload-artifact@v4
        with:
          name: ProxyPin-iOS
          path: build/ios/iphoneos/ProxyPin-iOS.ipa

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-android, build-windows, build-linux, build-macos, build-ios]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create compressed packages
        run: |
          # 压缩 Windows 包
          cd ProxyPin-Windows && zip -r ../ProxyPin-Windows-v${{ steps.get_version.outputs.VERSION }}.zip . && cd ..
          
          # 压缩 Linux 包
          cd ProxyPin-Linux && tar -czf ../ProxyPin-Linux-v${{ steps.get_version.outputs.VERSION }}.tar.gz . && cd ..
          
          # 压缩 macOS 包
          cd ProxyPin-macOS && zip -r ../ProxyPin-macOS-v${{ steps.get_version.outputs.VERSION }}.zip . && cd ..
          
          # 重命名 Android APK 文件
          mv app-arm64-v8a-release/app-arm64-v8a-release.apk ProxyPin-Android-arm64-v8a-v${{ steps.get_version.outputs.VERSION }}.apk
          mv app-armeabi-v7a-release/app-armeabi-v7a-release.apk ProxyPin-Android-armeabi-v7a-v${{ steps.get_version.outputs.VERSION }}.apk
          mv app-x86_64-release/app-x86_64-release.apk ProxyPin-Android-x86_64-v${{ steps.get_version.outputs.VERSION }}.apk
          
          # 重命名 iOS IPA 文件
          mv ProxyPin-iOS/ProxyPin-iOS.ipa ProxyPin-iOS-v${{ steps.get_version.outputs.VERSION }}.ipa

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ProxyPin v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            ProxyPin-Windows-v${{ steps.get_version.outputs.VERSION }}.zip
            ProxyPin-Linux-v${{ steps.get_version.outputs.VERSION }}.tar.gz
            ProxyPin-macOS-v${{ steps.get_version.outputs.VERSION }}.zip
            ProxyPin-Android-arm64-v8a-v${{ steps.get_version.outputs.VERSION }}.apk
            ProxyPin-Android-armeabi-v7a-v${{ steps.get_version.outputs.VERSION }}.apk
            ProxyPin-Android-x86_64-v${{ steps.get_version.outputs.VERSION }}.apk
            ProxyPin-iOS-v${{ steps.get_version.outputs.VERSION }}.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}